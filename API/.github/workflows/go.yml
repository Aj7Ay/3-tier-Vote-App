name: CICD

on:
  push:
    tags:
      - '1.*.*'
  pull_request:
    branches:
      - master
#  schedule:
#    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19

    - name: Build
      run: |
        sed -i 's/TOKEN_VERSION/${{ env.RELEASE_VERSION }}/g' main.go
        go get -v -t -d ./...
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o api
        tar -czf release-${{ env.RELEASE_VERSION }}.linux-amd64.tar.gz api
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o api
        tar -czf release-${{ env.RELEASE_VERSION }}.linux-arm64.tar.gz api
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o api
        tar -czf release-${{ env.RELEASE_VERSION }}.darwin-amd64.tar.gz api
        ls -la

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: release-${{ env.RELEASE_VERSION }}
        path: | 
          release-${{ env.RELEASE_VERSION }}.linux-amd64.tar.gz
          release-${{ env.RELEASE_VERSION }}.linux-arm64.tar.gz
          release-${{ env.RELEASE_VERSION }}.darwin-amd64.tar.gz

    # Create Release v1
    - name: Make Release
      uses: softprops/action-gh-release@v0.1.5
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: release-${{ env.RELEASE_VERSION }}
        files: |
          release-${{ env.RELEASE_VERSION }}.linux-amd64.tar.gz
          release-${{ env.RELEASE_VERSION }}.linux-arm64.tar.gz
          release-${{ env.RELEASE_VERSION }}.darwin-amd64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}